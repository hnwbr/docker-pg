services:
  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION_TAG:-15-alpine}
    env_file: .env
    restart: always
    deploy:
      resources:
        limits:
          cpus: $POSTGRES_LIMITS_CPUS
          memory: $POSTGRES_LIMITS_MEMORY
        reservations:
          cpus: $POSTGRES_RESERVATIONS_CPUS
          memory: $POSTGRES_RESERVATIONS_MEMORY
    networks:
      - pg
    ports:
      - 54301:54321
    volumes:
      - var-lib-postgresql-data:/var/lib/postgresql/data/
      # - ./bind/var-lib-postgresql:/var/lib/postgresql/data/
      - ./bind/etc-pgdump:/etc/pgdump/
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    profiles: ['pgadmin']
    depends_on:
      - postgres
    env_file: .env
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: $PGADMIN_LIMITS_CPUS
          memory: $PGADMIN_LIMITS_MEMORY
    networks:
      - nginx
      - pg
    ports:
      - 5050:80
      - 5051:443
    volumes:
      - var-lib-pgadmin:/var/lib/pgadmin
      # - ./bind/var-lib-pgadmin:/var/lib/pgadmin
      # - ./bind/pgadmin4:/pgadmin4
      # - ./bind/pgadmin4/servers.json:/pgadmin4/servers.json
      # - ./path/to/certificate.cert:/certs/server.cert
      # - ./path/to/certificate.key:/certs/server.key

networks:
  pg:
    external: true
  nginx:
    external: true

volumes:
  var-lib-postgresql-data:
    external: true
  var-lib-pgadmin:
    external: true
